@model Reci_Me.UI.ViewModels.RecipeVM

@{
    ViewData["Title"] = ViewBag.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>
    <div style="width:100%; text-align:center">
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Recipe.Name" class="control-label"></label>
                <input asp-for="Recipe.Name" class="form-control" />
                <span asp-validation-for="Recipe.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.CategoryId" class="control-label"></label>
                <select asp-for="Recipe.CategoryId" class="form-control"
                        asp-items="@(new SelectList(Model.Categories, "Id", "Name"))"></select>
                <span asp-validation-for="Recipe.CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.Servings" class="control-label"></label>
                <input asp-for="Recipe.Servings" type="number" min="1" class="form-control" />
                <span asp-validation-for="Recipe.Servings" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.TotalTime" class="control-label"></label>
                <input asp-for="Recipe.TotalTime" type="number" min="0" class="form-control" />
                <span asp-validation-for="Recipe.TotalTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.PrepTime" class="control-label"></label>
                <input asp-for="Recipe.PrepTime" type="number" min="0" class="form-control" />
                <span asp-validation-for="Recipe.PrepTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Recipe.MainImagePath" class="control-label"></label>
                <img class="imagepropmed"
                     alt="Select an Image"
                     id="recipeimage"
                     src="~/css/img/Logo revised.png" 
                     height="100"
                     width="100"/>
                <input id="FileName" asp-for="Recipe.MainImagePath" class="form-control" />
                <input type="file" name="File" id="File" accept="image/" onchange="loadFile(event)" />
                <span asp-validation-for="Recipe.MainImagePath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="btnAdd" type="button" value="Add a Step" onclick="AddTextBox()" />
            </div>
            <div class="form-group" id="TextBoxContainer">
            </div>

            <div class="form-group mt-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="ps-2">
    <a asp-action="Index" asp-controller="Home">Back to Main Menu</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    var loadFile = function (event) {
        var output = document.getElementById('recipeimage');
        output.src = URL.createObjectURL(event.target.files[0]);
    }
</script>

<script type="text/javascript">
    function GetDynamicTextBox(value) {
        var div = $("<div />");

        var textBox = $("<input />").attr("type", "textbox").attr("name", "DynamicTextBox").attr("class", "instruction");
        textBox.val(value);
        div.append(textBox);

        var button = $("<input />").attr("type", "button").attr("value", "Remove");
        button.attr("onclick", "RemoveTextBox(this)");
        div.append(button);

        return div;
    }

    function AddTextBox() {
        var div = GetDynamicTextBox("");
        $("#TextBoxContainer").append(div);
    }

    function RemoveTextBox(button) {
        $(button).parent().remove();
    }

    $(function () {
        var values = eval('@Html.Raw(ViewBag.Values)');
        if (values != null) {
            $("#TextBoxContainer").html("");
            $(values).each(function () {
                $("#TextBoxContainer").append(GetDynamicTextBox(this));
            });
        }
    });
</script>
